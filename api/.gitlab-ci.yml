.only-auth-backend:
  only:
    changes:
      - ".gitlab-ci.yml"
      - "auth-backend/**/*"

.except-wip-or-non-auth-backend-tags:
  except:
    variables:
      - $CI_COMMIT_TAG && $CI_COMMIT_TAG !~ /\+auth-backend$/
      - $CI_COMMIT_MESSAGE && $CI_COMMIT_MESSAGE =~ /^wip:/

auth-backend:install_mod:
  extends:
    - .only-branches
    - .only-auth-backend
    - .except-wip-or-non-auth-backend-tags
  stage: dep
  image: golang:1.13
  tags:
    - misakey_go
  script:
    - make -C auth-backend dep
  artifacts:
    name: "auth-backend:vendor-$CI_PIPELINE_ID"
    paths:
      - auth-backend/vendor/
    expire_in: 1 hour

auth-backend:lint_code:
  extends:
    - .only-branches
    - .only-auth-backend
    - .except-wip-or-non-auth-backend-tags
  stage: test
  image: golang:1.13
  dependencies:
    - auth-backend:install_mod
  tags:
    - misakey_go
  script:
    - make -C auth-backend lint
  needs:
    - auth-backend:install_mod


auth-backend:unit_tests:
  extends:
    - .only-branches
    - .only-auth-backend
    - .except-wip-or-non-auth-backend-tags
  stage: test
  image: golang:1.13
  dependencies:
    - auth-backend:install_mod
  tags:
    - misakey_go
  script:
    - make -C auth-backend test
  needs:
    - auth-backend:install_mod

auth-backend:build:
  extends:
    - .only-master-and-manual
    - .only-auth-backend
    - .except-wip-or-non-auth-backend-tags
  stage: build
  image: docker:stable
  dependencies:
    - auth-backend:install_mod
  tags:
    - misakey_docker
  before_script:
    - apk add make
    - apk add git
    - make docker-login
  script:
    - make -C auth-backend build
    - make -C auth-backend deploy
  needs:
    - auth-backend:install_mod
    - auth-backend:unit_tests
